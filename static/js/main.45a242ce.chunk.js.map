{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","TodoList","App","useState","status","setFilter","useEffect","localStorage","getItem","setItem","JSON","stringify","localTodo","parse","getLocalTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a242ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n\r\n\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) =>{\r\n\r\n  const inputTextHandler = (e) =>{\r\n    setInputText(e.target.value)\r\n  }\r\n\r\n\r\nconst submitTodoHandler =(e) =>{\r\n  e.preventDefault()\r\n  setTodos([\r\n    ...todos, {text: inputText, completed:false, id : Math.random()* 10}\r\n  ])\r\n  ;\r\n  setInputText('')\r\n}\r\n\r\nconst filterStatus = (e) =>{\r\n  setStatus(e.target.value)\r\n}\r\n\r\n  return(\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n\r\n      <button className=\"todo-button\" type=\"submit\" onClick = {submitTodoHandler}>\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onChange={filterStatus}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"incompleted\">Incompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Form","import React from \"react\";\r\n\r\n\r\nconst Todo = ({text, todo, todos, setTodos})=> {\r\n// todo is a prop that was passed down from TodoList Component\r\n    const deleteHandler = ()=>{\r\n\r\n       setTodos(todos.filter(item=> item.id !== todo.id))\r\n    }\r\n\r\n\r\n    const completeHandler = () =>{\r\n\r\n        setTodos(\r\n            todos.map(item=>{\r\n                if(item.id === todo.id){\r\n                    return{\r\n                        ...item, completed: !item.completed\r\n                    }\r\n                }    \r\n                return item\r\n            })\r\n        )\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\" :\"\"}`}>{text}</li>\r\n            <button className=\"complete-btn\" onClick={completeHandler}><i className= \"fas fa-check\"></i></button>\r\n            <button className=\"trash-btn\" onClick={deleteHandler}><i className= \"fas fa-trash\"></i></button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Todo","import React from \"react\";\r\nimport Todo from \"./Todo\"\r\n\r\n\r\nconst TodoList = ({todos, setTodos, filter}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filter.map(todo=><Todo \r\n        key={todo.id} \r\n        text={todo.text} \r\n        todos={todos} \r\n        todo ={todo}\r\n        setTodos={setTodos} \r\n        completed={todo.completed}  />)}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, {useState,useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\n\n\nfunction App() {\n\n\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filter, setFilter] = useState([])\n\nconst saveLocalTodos = ()=>{\n  localStorage.setItem(\"todos\", JSON.stringify(todos))\n}\n\nconst getLocalTodos =() =>{\n  if(localStorage.getItem(\"todos\") ===null){\n    localStorage.setItem(\"todos\", JSON.stringify([]))\n  } else{\n    let localTodo = JSON.parse(localStorage.getItem(\"todos\"))\n    setTodos(localTodo)\n  }\n}\n\n\n  const filterHanlder = () => {\n\n  if(status === \"completed\"){\n    setFilter(todos.filter((todo)=> todo.completed === true))\n  } else if(status === \"incompleted\"){\n    setFilter(todos.filter((todo)=> todo.completed === false))}\n    else{setFilter(todos)}\n  }\n\nuseEffect(() => {\n  getLocalTodos()\n}, [])\n\n  useEffect(() => {\n    filterHanlder()\n    saveLocalTodos()\n   }, [todos, status]);\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>üë©üèΩ‚Äçüíª Shane's Todo List üìã</h1>\n    </header>\n    <Form setStatus={setStatus} todos={todos} inputText={inputText} setTodos={setTodos} setInputText={setInputText}/> \n    <TodoList todos={todos} setTodos={setTodos} filter={filter}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}